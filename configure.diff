--- libs/libtorc-av/configure	2013-05-01 10:16:11.000000000 +0100
+++ configure	2014-02-19 10:20:08.000000000 +0000
@@ -1,6 +1,6 @@
 #!/bin/sh
 #
-# FFmpeg configure script
+# Torc configure script, which extends the FFmpeg configure script
 #
 # Copyright (c) 2000-2002 Fabrice Bellard
 # Copyright (c) 2005-2008 Diego Biurrun
@@ -341,6 +341,18 @@
   --random-seed=VALUE      seed value for --enable/disable-random
 
 NOTE: Object files are built at the place where configure is launched.
+
+Torc:
+  --cxx=CXX                use C++ compiler CXX [$cxx_default]
+  --extra-cxxflags=ECXFLAGS add ECXXFLAGS to list of flags for C++ compile
+  --qmake=QMAKE            use specified qmake [$qmake_default]
+
+Torc external library support:
+  --disable-libdns_sd      disable Bonjour via libdns_sd [autodetect]
+  --disable-libudev        disable udev via libudev [autodetect]
+  --disable-x11base        disable default X11 support [autodetect]
+  --disable-libcrypto      disable use of the OpenSSL cryptographic library [autodetect]
+
 EOF
   exit 0
 }
@@ -690,7 +702,7 @@
 }
 
 add_cxxflags(){
-    append CXXFLAGS $($cflags_filter "$@")
+    append ECXXFLAGS "$@"
 }
 
 add_asflags(){
@@ -747,7 +759,19 @@
     log check_cxx "$@"
     cat > $TMPCPP
     log_file $TMPCPP
-    check_cmd $cxx $CPPFLAGS $CFLAGS $CXXFLAGS "$@" $CXX_C -o $TMPO $TMPCPP
+    check_cmd $cxx $CPPFLAGS $CXXFLAGS "$@" $CXX_C -o $TMPO $TMPCPP
+}
+
+add_cxxppflags(){
+    append CXXPPFLAGS "$@"
+}
+
+check_cxxflags(){
+    log check_cxxflags "$@"
+    check_cxx "$@" <<EOF && add_cxxflags "$@" || echolog "WARNING! An unknown C++ compiler flag in: \"$@\". Option(s) will be ignored."
+class X {};
+int x;
+EOF
 }
 
 check_cpp(){
@@ -904,6 +928,7 @@
             echo "#include <$hdr>"
         done
         for func in $funcs; do
+            echo "long check_$func(void);"
             echo "long check_$func(void) { return (long) $func; }"
         done
         echo "int main(void) { return 0; }"
@@ -1252,6 +1277,10 @@
     thumb
     version3
     xmm_clobber_test
+    libcrypto
+    libdns_sd
+    libudev
+    x11base
 "
 
 THREADS_LIST='
@@ -1388,6 +1417,8 @@
     closesocket
     cmov
     CommandLineToArgvW
+    cpu_clips_negative
+    cpu_clips_positive
     cpunop
     CryptGenRandom
     dcbzl
@@ -1583,6 +1614,7 @@
     nm
     optflags
     pkg_config
+    qmake
     progs_suffix
     random_seed
     samples
@@ -2123,11 +2155,12 @@
 # installation paths
 prefix_default="/usr/local"
 bindir_default='${prefix}/bin'
-datadir_default='${prefix}/share/ffmpeg'
-incdir_default='${prefix}/include'
+datadir_default='${prefix}/share/torc'
+incdir_default='${prefix}/include/torc'
 libdir_default='${prefix}/lib'
 mandir_default='${prefix}/share/man'
 shlibdir_default="$libdir_default"
+libdir_name='lib'
 
 # toolchain
 ar_default="ar"
@@ -2169,14 +2202,38 @@
 enable static
 enable swscale_alpha
 
+# Torc requirements
+echo "Torc:"
+echo
+echo "Forcing shared libraries (and disabling static)"
+echo
+enable gpl
+enable libcdio
+disable outdevs
+disable static
+disable doc
+enable shared
+enable x11base
+enable vaapi
+enable vdpau
+enable avresample
+enable libass
+enable libfreetype
+
+# Torc configurable options
+enable libcrypto
+enable libdns_sd
+enable libudev
+qmake_default="qmake"
+
 # build settings
 SHFLAGS='-shared -Wl,-soname,$$(@F)'
 FFSERVERLDFLAGS=-Wl,-E
-LIBPREF="lib"
+LIBPREF="libtorc-"
 LIBSUF=".a"
 FULLNAME='$(NAME)$(BUILDSUF)'
 LIBNAME='$(LIBPREF)$(FULLNAME)$(LIBSUF)'
-SLIBPREF="lib"
+SLIBPREF="libtorc-"
 SLIBSUF=".so"
 SLIBNAME='$(SLIBPREF)$(FULLNAME)$(SLIBSUF)'
 SLIBNAME_WITH_VERSION='$(SLIBNAME).$(LIBVERSION)'
@@ -2198,6 +2255,7 @@
 CXX_O='-o $@'
 LD_O='-o $@'
 LD_LIB='-l%'
+LD_TORC_LIB='-ltorc-%'
 LD_PATH='-L'
 HOSTCC_C='-c'
 HOSTCC_O='-o $@'
@@ -2241,17 +2299,17 @@
     sed -n "s/^[^#]*$pattern.*([^,]*, *\([^,]*\)\(,.*\)*).*/\1_$thing/p" "$file"
 }
 
-ENCODER_LIST=$(find_things  encoder  ENC      libavcodec/allcodecs.c)
-DECODER_LIST=$(find_things  decoder  DEC      libavcodec/allcodecs.c)
-HWACCEL_LIST=$(find_things  hwaccel  HWACCEL  libavcodec/allcodecs.c)
-PARSER_LIST=$(find_things   parser   PARSER   libavcodec/allcodecs.c)
-BSF_LIST=$(find_things      bsf      BSF      libavcodec/allcodecs.c)
-MUXER_LIST=$(find_things    muxer    _MUX     libavformat/allformats.c)
-DEMUXER_LIST=$(find_things  demuxer  DEMUX    libavformat/allformats.c)
-OUTDEV_LIST=$(find_things   outdev   OUTDEV   libavdevice/alldevices.c)
-INDEV_LIST=$(find_things    indev    _IN      libavdevice/alldevices.c)
-PROTOCOL_LIST=$(find_things protocol PROTOCOL libavformat/allformats.c)
-FILTER_LIST=$(find_things   filter   FILTER   libavfilter/allfilters.c)
+ENCODER_LIST=$(find_things  encoder  ENC      libs/libtorc-av/libavcodec/allcodecs.c)
+DECODER_LIST=$(find_things  decoder  DEC      libs/libtorc-av/libavcodec/allcodecs.c)
+HWACCEL_LIST=$(find_things  hwaccel  HWACCEL  libs/libtorc-av/libavcodec/allcodecs.c)
+PARSER_LIST=$(find_things   parser   PARSER   libs/libtorc-av/libavcodec/allcodecs.c)
+BSF_LIST=$(find_things      bsf      BSF      libs/libtorc-av/libavcodec/allcodecs.c)
+MUXER_LIST=$(find_things    muxer    _MUX     libs/libtorc-av/libavformat/allformats.c)
+DEMUXER_LIST=$(find_things  demuxer  DEMUX    libs/libtorc-av/libavformat/allformats.c)
+OUTDEV_LIST=$(find_things   outdev   OUTDEV   libs/libtorc-av/libavdevice/alldevices.c)
+INDEV_LIST=$(find_things    indev    _IN      libs/libtorc-av/libavdevice/alldevices.c)
+PROTOCOL_LIST=$(find_things protocol PROTOCOL libs/libtorc-av/libavformat/allformats.c)
+FILTER_LIST=$(find_things   filter   FILTER   libs/libtorc-av/libavfilter/allfilters.c)
 
 ALL_COMPONENTS="
     $BSF_LIST
@@ -2316,6 +2374,8 @@
 for opt do
     optval="${opt#*=}"
     case "$opt" in
+        --extra-cxxflags=*) add_cxxflags $optval
+        ;;
         --extra-ldflags=*)
             add_ldflags $optval
         ;;
@@ -2391,6 +2451,15 @@
     esac
 done
 
+#setting default runtime prefix and libdir
+if test -n "${prefix}"; then
+    libdir_default="${prefix}/${libdir_name}"
+    shlibdir_default="${prefix}/${libdir_name}"
+else
+    libdir_default="${prefix_default}/${libdir_name}"
+    shlibdir_default="${prefix_default}/${libdir_name}"
+fi
+
 disabled logging && logfile=/dev/null
 
 echo "# $0 $FFMPEG_CONFIGURATION" > $logfile
@@ -2426,6 +2495,7 @@
     ;;
     msvc)
         cc_default="c99wrap cl"
+        cxx_default="c99wrap cl"
         ld_default="c99wrap link"
         nm_default="dumpbin -symbols"
         ar_default="lib"
@@ -2436,7 +2506,7 @@
     ;;
 esac
 
-set_default arch cc cxx pkg_config strip sysinclude target_os yasmexe
+set_default arch cc cxx pkg_config qmake strip sysinclude target_os yasmexe
 enabled cross_compile || host_cc_default=$cc
 set_default host_cc
 
@@ -2845,11 +2915,13 @@
     case "$cc_type" in
         gcc|llvm_gcc|clang)
             add_cppflags --sysroot="$sysroot"
+            add_cxxppflags --sysroot="$sysroot"
             add_ldflags --sysroot="$sysroot"
         ;;
         tms470)
             add_cppflags -I"$sysinclude"
             add_ldflags  --sysroot="$sysroot"
+            add_cxxppflags -I"$sysinclude"
         ;;
     esac
 fi
@@ -3144,6 +3216,7 @@
 
 add_cppflags -D_ISOC99_SOURCE
 add_cxxflags -D__STDC_CONSTANT_MACROS
+add_cxxflags -D__STDC_LIMIT_MACROS
 check_cflags -std=c99
 check_cc -D_FILE_OFFSET_BITS=64 <<EOF && add_cppflags -D_FILE_OFFSET_BITS=64
 #include <stdlib.h>
@@ -3151,6 +3224,12 @@
 check_cc -D_LARGEFILE_SOURCE <<EOF && add_cppflags -D_LARGEFILE_SOURCE
 #include <stdlib.h>
 EOF
+check_cxx -D_FILE_OFFSET_BITS=64 <<EOF && add_cxxflags -D_FILE_OFFSET_BITS=64
+#include <stdlib.h>
+EOF
+check_cxx -D_LARGEFILE_SOURCE <<EOF && add_cxxflags -D_LARGEFILE_SOURCE
+#include <stdlib.h>
+EOF
 
 check_host_cflags -std=c99
 check_host_cflags -Wall
@@ -3244,6 +3323,8 @@
         strip="strip -d"
         ;;
     darwin)
+        enable vda
+        disable x11base
         gas="gas-preprocessor.pl $cc"
         enabled ppc && add_asflags -force_cpusubtype_ALL
         SHFLAGS='-dynamiclib -Wl,-single_module -Wl,-install_name,$(SHLIBDIR)/$(SLIBNAME_WITH_MAJOR),-current_version,$(LIBVERSION),-compatibility_version,$(LIBMAJOR)'
@@ -3272,7 +3353,6 @@
             LIBTARGET=arm-wince
         fi
         shlibdir_default="$bindir_default"
-        SLIBPREF=""
         SLIBSUF=".dll"
         SLIBNAME_WITH_VERSION='$(SLIBPREF)$(FULLNAME)-$(LIBVERSION)$(SLIBSUF)'
         SLIBNAME_WITH_MAJOR='$(SLIBPREF)$(FULLNAME)-$(LIBMAJOR)$(SLIBSUF)'
@@ -3298,13 +3378,15 @@
         if enabled shared; then
             # Link to the import library instead of the normal static library
             # for shared libs.
-            LD_LIB='%.lib'
+            LD_LIB='torc-%.lib'
+            LD_TORC_LIB='torc-%.lib'
             # Cannot build shared and static libraries at the same time with
             # MSVC.
             disable static
         fi
         shlibdir_default="$bindir_default"
-        SLIBPREF=""
+        LIBPREF="torc-"
+        SLIBPREF="torc-"
         SLIBSUF=".dll"
         SLIBNAME_WITH_VERSION='$(SLIBPREF)$(FULLNAME)-$(LIBVERSION)$(SLIBSUF)'
         SLIBNAME_WITH_MAJOR='$(SLIBPREF)$(FULLNAME)-$(LIBMAJOR)$(SLIBSUF)'
@@ -3523,6 +3605,8 @@
     add_cppflags -DPIC
     add_cflags   -fPIC
     add_asflags  -fPIC
+    add_cxxflags -fPIC
+    add_cxxppflags -DPIC
 }
 
 enabled pic && enable_pic
@@ -3815,6 +3899,7 @@
 check_header dlfcn.h
 check_header dxva.h
 check_header dxva2api.h -D_WIN32_WINNT=0x0600
+check_struct dxva2api.h DXVA_PictureParameters wDecodedPictureIndex
 check_header io.h
 check_header libcrystalhd/libcrystalhd_if.h
 check_header malloc.h
@@ -3873,7 +3958,7 @@
 
 check_lib math.h sin -lm && LIBM="-lm"
 disabled crystalhd || check_lib libcrystalhd/libcrystalhd_if.h DtsCrystalHDVersion -lcrystalhd || disable crystalhd
-enabled vaapi && require vaapi va/va.h vaInitialize -lva
+enabled vaapi && check_lib va/va.h vaInitialize -lva
 
 atan2f_args=2
 ldexpf_args=2
@@ -3890,7 +3975,7 @@
 enabled gnutls     && require_pkg_config gnutls gnutls/gnutls.h gnutls_global_init
 enabled libiec61883 && require libiec61883 libiec61883/iec61883.h iec61883_cmp_connect -lraw1394 -lavc1394 -lrom1394 -liec61883
 enabled libaacplus && require  "libaacplus >= 2.0.0" aacplus.h aacplusEncOpen -laacplus
-enabled libass     && require_pkg_config libass ass/ass.h ass_library_init
+enabled libass     && check_lib2 ass/ass.h ass_flush_events -lass || disable libass
 enabled libbluray  && require libbluray libbluray/bluray.h bd_open -lbluray
 enabled libcelt    && require libcelt celt/celt.h celt_decode -lcelt0 &&
                       { check_lib celt/celt.h celt_decoder_create_custom -lcelt0 ||
@@ -3900,7 +3985,7 @@
 enabled libfdk_aac && require  libfdk_aac fdk-aac/aacenc_lib.h aacEncOpen -lfdk-aac
 flite_libs="-lflite_cmu_time_awb -lflite_cmu_us_awb -lflite_cmu_us_kal -lflite_cmu_us_kal16 -lflite_cmu_us_rms -lflite_cmu_us_slt -lflite_usenglish -lflite_cmulex -lflite"
 enabled libflite   && require2 libflite "flite/flite.h" flite_init $flite_libs
-enabled libfreetype && require_pkg_config freetype2 "ft2build.h freetype/freetype.h" FT_Init_FreeType
+enabled libfreetype && check_pkg_config freetype2 "ft2build.h freetype/freetype.h" FT_Init_FreeType || disable libfreetype
 enabled libgsm     && { for gsm_hdr in "gsm.h" "gsm/gsm.h"; do
                             check_lib "${gsm_hdr}" gsm_create -lgsm && break;
                         done || die "ERROR: libgsm not found"; }
@@ -3953,6 +4038,9 @@
                         check_lib openssl/ssl.h SSL_library_init -lssl32 -leay32 ||
                         check_lib openssl/ssl.h SSL_library_init -lssl -lcrypto -lws2_32 -lgdi32 ||
                         die "ERROR: openssl not found"; }
+enabled dxva2 && enabled dxva2api_h && enabled windows || disable dxva2
+enabled x11base && check_lib X11/Xlib.h XQueryExtension -lX11 || disable x11base
+enabled x11base && check_lib X11/extensions/xf86vmode.h XF86VidModeSetClientVersion -lXxf86vm || disable x11base
 
 if enabled gnutls; then
     { check_lib nettle/bignum.h nettle_mpz_get_str_256 -lnettle -lhogweed -lgmp && enable nettle; } ||
@@ -4033,7 +4121,7 @@
 enabled_any sndio_indev sndio_outdev && check_lib2 sndio.h sio_open -lsndio
 
 if enabled libcdio; then
-    check_lib2 "cdio/cdda.h cdio/paranoia.h" cdio_cddap_open -lcdio_paranoia -lcdio_cdda -lcdio || check_lib2 "cdio/paranoia/cdda.h cdio/paranoia/paranoia.h" cdio_cddap_open -lcdio_paranoia -lcdio_cdda -lcdio
+    check_lib2 "cdio/cdda.h cdio/paranoia.h" cdio_cddap_open -lcdio_paranoia -lcdio_cdda -lcdio || check_lib2 "cdio/paranoia/cdda.h cdio/paranoia/paranoia.h" cdio_cddap_open -lcdio_paranoia -lcdio_cdda -lcdio || disable libcdio
 fi
 
 enabled x11grab                                           &&
@@ -4055,7 +4143,7 @@
 # Funny iconv installations are not unusual, so check it after all flags have been set
 disabled iconv || check_func_headers iconv.h iconv || check_lib2 iconv.h iconv -liconv || disable iconv
 
-enabled debug && add_cflags -g"$debuglevel" && add_asflags -g"$debuglevel"
+enabled debug && add_cflags -g"$debuglevel" && add_asflags -g"$debuglevel" && add_cxxflags -g"$debuglevel"
 enabled coverage && add_cflags "-fprofile-arcs -ftest-coverage" && add_ldflags "-fprofile-arcs -ftest-coverage"
 test -n "$valgrind" && target_exec="$valgrind --error-exitcode=1 --malloc-fill=0x2a --track-origins=yes --leak-check=full --gen-suppressions=all --suppressions=$source_path/tests/fate-valgrind.supp"
 
@@ -4076,6 +4164,13 @@
 check_cflags -Wno-pointer-to-int-cast
 check_cflags -Wstrict-prototypes
 enabled extra_warnings && check_cflags -Winline
+check_cxxflags -Wall
+check_cxxflags -Wpointer-arith
+check_cxxflags -Wno-non-virtual-dtor
+#needed for INT64_C in libs/libavformat under g++
+check_cxxflags -D__STDC_CONSTANT_MACROS
+check_cxxflags -D__STDC_LIMIT_MACROS
+check_cxxflags -Woverloaded-virtual
 
 # add some linker flags
 check_ldflags -Wl,--warn-common
@@ -4109,11 +4204,16 @@
 if [ -z "$optflags" ]; then
     if enabled small; then
         optflags=$cflags_size
+        add_cxxflags $size_cflags
     elif enabled optimizations; then
         optflags=$cflags_speed
+        add_cxxflags $speed_cflags
     else
         optflags=$cflags_noopt
+        add_cxxflags $noopt_cflags
     fi
+    else
+        add_cxxflags $optflags
 fi
 
 check_optflags(){
@@ -4252,6 +4352,8 @@
 
 merge_deps libavfilter $FILTER_LIST
 
+#disable $INDEV_LIST
+
 echo "install prefix            $prefix"
 echo "source path               $source_path"
 echo "C compiler                $cc"
@@ -4348,6 +4450,108 @@
 
 echo "License: $license"
 
+# Torc
+
+# Qt
+is_qmake5(){
+    $1 --version 2>&1 | egrep -q -e "Qt version 5\.[0-9]\.[0-9]"
+}
+
+if ! is_qmake5 $qmake ; then
+    is_qmake5 qmake-qt5 && qmake=qmake-qt5 || die "qmake for Qt5.0 or newer not found. Please specify the correct qmake with --qmake="
+fi
+
+if test $target_os = mingw32 ; then
+    qt_inc="-I`cd $(${qmake} -query QT_INSTALL_HEADERS); pwd`"
+    qt_libs="-L`cd $(${qmake} -query QT_INSTALL_LIBS) ; pwd`"
+else
+    qt_inc="-I${sysroot}/$(${qmake} -query QT_INSTALL_HEADERS)"
+    qt_libs="-L${sysroot}/$(${qmake} -query QT_INSTALL_LIBS)"
+fi
+
+# udev support for linux disk detection
+enabled libudev && check_lib2 libudev.h udev_new -ludev || disable libudev
+
+# libcrypto for RAOP
+enabled libcrypto && check_lib openssl/rsa.h RSA_new -lcrypto || disable libcrypto
+
+# Bonjour support for service discovery and registration
+if test $target_os != darwin ; then
+    enabled libdns_sd && check_lib dns_sd.h DNSServiceRegister -ldns_sd || disable libdns_sd
+fi
+
+# clipping test for libtorc-audio/samplerate
+check_exec -lm << EOF && enable cpu_clips_positive
+    #define _ISOC9X_SOURCE  1
+    #define _ISOC99_SOURCE  1
+    #define __USE_ISOC99    1
+    #define __USE_ISOC9X    1
+    #include <math.h>
+    int main (void)
+    {	double	fval ;
+        int k, ival ;
+
+        fval = 1.0 * 0x7FFFFFFF ;
+        for (k = 0 ; k < 100 ; k++)
+        {
+            ival = (lrint (fval)) >> 24 ;
+            if (ival != 127)
+                return 1 ;
+
+            fval *= 1.2499999 ;
+        } ;
+
+        return 0 ;
+    }
+EOF
+
+check_exec -lm << EOF && enable cpu_clips_negative
+    #define _ISOC9X_SOURCE  1
+    #define _ISOC99_SOURCE  1
+    #define __USE_ISOC99    1
+    #define __USE_ISOC9X    1
+    #include <math.h>
+    int main (void)
+    {
+        double	fval ;
+        int k, ival ;
+
+        fval = -8.0 * 0x10000000 ;
+        for (k = 0 ; k < 100 ; k++)
+        {
+            ival = (lrint (fval)) >> 24 ;
+            if (ival != -128)
+                return 1 ;
+
+            fval *= 1.2499999 ;
+        } ;
+
+        return 0 ;
+    }
+EOF
+
+echo
+echo "Torc:"
+
+echo "C++ compiler                 $(which $cxx)"
+echo "qmake                        $(which $qmake) [$($qmake -query QT_VERSION)]"
+echo "libcrypto enabled            ${libcrypto-no}"
+echo "libdns_sd (Bonjour) enabled  ${libdns_sd-no}"
+echo "libass enabled               ${libass-no}"
+echo "libfreetype enabled          ${libfreetype-no}"
+echo "BDJ support enabled          ${libfreetype-no}"
+echo "libcdio (CD input) enabled   ${libcdio_indev-no}"
+if test $target_os = "linux"; then
+    echo "vaapi enabled                ${vaapi-no}"
+    echo "vdpau enabled                ${vdpau-no}"
+    echo "alsa audio enabled           ${alsa_outdev-no}"
+    echo "oss audio enabled            ${oss_outdev-no}"
+    echo "libudev enabled              ${libudev-no}"
+    echo "X11 enabled                  ${x11base-no}"
+fi
+echo
+#end Torc
+
 echo "Creating config.mak and config.h..."
 
 test -e Makefile || $ln_s "$source_path/Makefile" .
@@ -4358,20 +4562,25 @@
 
 cat > config.mak <<EOF
 # Automatically generated by configure - do not modify!
-ifndef FFMPEG_CONFIG_MAK
+#ifndef FFMPEG_CONFIG_MAK
 FFMPEG_CONFIG_MAK=1
 FFMPEG_CONFIGURATION=$FFMPEG_CONFIGURATION
+PREFIX=$prefix
+BUILD_ROOT="$PWD"
+SYSROOT=$sysroot
 prefix=$prefix
-LIBDIR=\$(DESTDIR)$libdir
-SHLIBDIR=\$(DESTDIR)$shlibdir
-INCDIR=\$(DESTDIR)$incdir
-BINDIR=\$(DESTDIR)$bindir
-DATADIR=\$(DESTDIR)$datadir
-MANDIR=\$(DESTDIR)$mandir
+LIBDIRNAME=$libdir_name
+LIBDIR=$libdir
+SHLIBDIR=$shlibdir
+INCDIR=$incdir
+BINDIR=$bindir
+DATADIR=$datadir
+RUNPREFIX=$(eval eval c_escape $datadir)
+MANDIR=$mandir
 SRC_PATH=$source_path
-ifndef MAIN_MAKEFILE
-SRC_PATH:=\$(SRC_PATH:.%=..%)
-endif
+#ifndef MAIN_MAKEFILE
+#SRC_PATH:=\$(SRC_PATH:.%=..%)
+#endif
 CC_IDENT=$cc_ident
 ARCH=$arch
 CC=$cc
@@ -4404,11 +4613,20 @@
 CXX_O=$CXX_O
 LD_O=$LD_O
 LD_LIB=$LD_LIB
+LD_TORC_LIB=$LD_TORC_LIB
 LD_PATH=$LD_PATH
 DLLTOOL=$dlltool
 LDFLAGS=$LDFLAGS
 LDFLAGS-ffserver=$FFSERVERLDFLAGS
-SHFLAGS=$(echo $($ldflags_filter $SHFLAGS))
+#SHFLAGS=$SHFLAGS
+CXX_O=$CXX_O
+ECXXFLAGS=$ECXXFLAGS
+CXXPPFLAGS=$CXXPPFLAGS
+CONFIG-=app_bundle
+QMAKE=$qmake
+QMAKE_CC=$cc
+QMAKE_CXX=$cxx
+QMAKE_LINK=$cxx
 YASMFLAGS=$YASMFLAGS
 BUILDSUF=$build_suffix
 PROGSSUF=$progs_suffix
@@ -4448,7 +4666,7 @@
 CFLAGS-ffplay=$sdl_cflags
 ZLIB=$($ldflags_filter -lz)
 LIB_INSTALL_EXTRA_CMD=$LIB_INSTALL_EXTRA_CMD
-EXTRALIBS=$extralibs
+#EXTRALIBS=$extralibs
 COMPAT_OBJS=$compat_objs
 EXEOBJS=$exeobjs
 INSTALL=$install
@@ -4456,20 +4674,20 @@
 SLIBNAME=${SLIBNAME}
 SLIBNAME_WITH_VERSION=${SLIBNAME_WITH_VERSION}
 SLIBNAME_WITH_MAJOR=${SLIBNAME_WITH_MAJOR}
-SLIB_CREATE_DEF_CMD=${SLIB_CREATE_DEF_CMD}
-SLIB_EXTRA_CMD=${SLIB_EXTRA_CMD}
+#SLIB_CREATE_DEF_CMD=${SLIB_CREATE_DEF_CMD}
+#SLIB_EXTRA_CMD=${SLIB_EXTRA_CMD}
 SLIB_INSTALL_NAME=${SLIB_INSTALL_NAME}
 SLIB_INSTALL_LINKS=${SLIB_INSTALL_LINKS}
 SLIB_INSTALL_EXTRA_LIB=${SLIB_INSTALL_EXTRA_LIB}
 SLIB_INSTALL_EXTRA_SHLIB=${SLIB_INSTALL_EXTRA_SHLIB}
-SAMPLES:=${samples:-\$(FATE_SAMPLES)}
+#SAMPLES:=${samples:-\$(FATE_SAMPLES)}
 NOREDZONE_FLAGS=$noredzone_flags
 EOF
 
 get_version(){
     lcname=lib${1}
     name=$(toupper $lcname)
-    file=$source_path/$lcname/version.h
+    file=$source_path/libs/libtorc-av/$lcname/version.h
     eval $(awk "/#define ${name}_VERSION_M/ { print \$2 \"=\" \$3 }" "$file")
     eval ${name}_VERSION=\$${name}_VERSION_MAJOR.\$${name}_VERSION_MINOR.\$${name}_VERSION_MICRO
     eval echo "${lcname}_VERSION=\$${name}_VERSION" >> config.mak
@@ -4513,13 +4731,21 @@
                                      $ALL_COMPONENTS    \
 
 echo "#endif /* FFMPEG_CONFIG_H */" >> $TMPH
-echo "endif # FFMPEG_CONFIG_MAK" >> config.mak
+echo "#endif # FFMPEG_CONFIG_MAK" >> config.mak
+
+tmpfile TMPMAK .mak
+tmpfile TMPMAK2 .mak
+sed -e 's/#SHFLAGS=/SHFLAGS=/' -e 's/#EXTRALIBS=/EXTRALIBS=/' -e 's/#ifndef/ifndef/' -e 's/#endif/endif/' -e 's/#SRC_PATH:=/SRC_PATH:=/' -e 's/#SLIB_CREATE_DEF_CMD/SLIB_CREATE_DEF_CMD/' -e 's/#SLIB_EXTRA_CMD/SLIB_EXTRA_CMD/' config.mak > $TMPMAK
+cp_if_changed $TMPMAK libs/libtorc-av/config.mak
+sed -e 's/^!/#/' config.mak > $TMPMAK2
+cp_if_changed $TMPMAK2 config.mak
 
 # Do not overwrite an unchanged config.h to avoid superfluous rebuilds.
-cp_if_changed $TMPH config.h
-touch .config
+cp_if_changed $TMPH libs/libtorc-core/torcconfig.h
+cp_if_changed $TMPH libs/libtorc-av/config.h
+touch libs/libtorc-av/.config
 
-enabled yasm && cp_if_changed $TMPASM config.asm
+enabled yasm && cp_if_changed $TMPASM libs/libtorc-av/config.asm
 
 cat > $TMPH <<EOF
 /* Generated by ffconf */
@@ -4531,101 +4757,9 @@
 
 echo "#endif /* AVUTIL_AVCONFIG_H */" >> $TMPH
 
-cp_if_changed $TMPH libavutil/avconfig.h
+cp_if_changed $TMPH libs/libtorc-av/libavutil/avconfig.h
 
 if test -n "$WARNINGS"; then
     printf "\n$WARNINGS"
     enabled fatal_warnings && exit 1
 fi
-
-# build pkg-config files
-
-pkgconfig_generate(){
-    name=$1
-    shortname=${name#lib}${build_suffix}
-    comment=$2
-    version=$3
-    libs=$4
-    requires=$5
-    enabled ${name#lib} || return 0
-    mkdir -p $name
-    cat <<EOF > $name/$name${build_suffix}.pc
-prefix=$prefix
-exec_prefix=\${prefix}
-libdir=$libdir
-includedir=$incdir
-
-Name: $name
-Description: $comment
-Version: $version
-Requires: $(enabled shared || echo $requires)
-Requires.private: $(enabled shared && echo $requires)
-Conflicts:
-Libs: -L\${libdir} -l${shortname} $(enabled shared || echo $libs)
-Libs.private: $(enabled shared && echo $libs)
-Cflags: -I\${includedir}
-EOF
-
-mkdir -p doc/examples/pc-uninstalled
-includedir=${source_path}
-[ "$includedir" = . ] && includedir="\${pcfiledir}/../../.."
-    cat <<EOF > doc/examples/pc-uninstalled/$name.pc
-prefix=
-exec_prefix=
-libdir=\${pcfiledir}/../../../$name
-includedir=${includedir}
-
-Name: $name
-Description: $comment
-Version: $version
-Requires: $requires
-Conflicts:
-Libs: -L\${libdir} -l${shortname} $(enabled shared || echo $libs)
-Cflags: -I\${includedir}
-EOF
-}
-
-libavfilter_pc_deps="libavutil${build_suffix} = $LIBAVUTIL_VERSION"
-enabled libavfilter_deps_avcodec    && prepend libavfilter_pc_deps "libavcodec${build_suffix} = $LIBAVCODEC_VERSION,"
-enabled libavfilter_deps_avformat   && prepend libavfilter_pc_deps "libavformat${build_suffix} = $LIBAVFORMAT_VERSION,"
-enabled libavfilter_deps_avresample && prepend libavfilter_pc_deps "libavresample${build_suffix} = $LIBAVRESAMPLE_VERSION,"
-enabled libavfilter_deps_swscale    && prepend libavfilter_pc_deps "libswscale${build_suffix} = $LIBSWSCALE_VERSION,"
-enabled libavfilter_deps_swresample && prepend libavfilter_pc_deps "libswresample${build_suffix} = $LIBSWRESAMPLE_VERSION,"
-enabled libavfilter_deps_postproc   && prepend libavfilter_pc_deps "libpostproc${build_suffix} = $LIBPOSTPROC_VERSION,"
-libavfilter_pc_deps=${libavfilter_pc_deps%, }
-
-libavdevice_pc_deps="libavformat${build_suffix} = $LIBAVFORMAT_VERSION"
-enabled lavfi_indev && prepend libavdevice_pc_deps "libavfilter${build_suffix} = $LIBAVFILTER_VERSION,"
-
-pkgconfig_generate libavutil "FFmpeg utility library" "$LIBAVUTIL_VERSION" "$LIBM"
-pkgconfig_generate libavcodec "FFmpeg codec library" "$LIBAVCODEC_VERSION" "$extralibs" "libavutil${build_suffix} = $LIBAVUTIL_VERSION"
-pkgconfig_generate libavformat "FFmpeg container format library" "$LIBAVFORMAT_VERSION" "$extralibs" "libavcodec${build_suffix} = $LIBAVCODEC_VERSION"
-pkgconfig_generate libavdevice "FFmpeg device handling library" "$LIBAVDEVICE_VERSION" "$extralibs" "$libavdevice_pc_deps"
-pkgconfig_generate libavfilter "FFmpeg audio/video filtering library" "$LIBAVFILTER_VERSION" "$extralibs" "$libavfilter_pc_deps"
-pkgconfig_generate libpostproc "FFmpeg postprocessing library" "$LIBPOSTPROC_VERSION" "" "libavutil${build_suffix} = $LIBAVUTIL_VERSION"
-pkgconfig_generate libavresample "Libav audio resampling library" "$LIBAVRESAMPLE_VERSION" "$extralibs" "libavutil${build_suffix} = $LIBAVUTIL_VERSION"
-pkgconfig_generate libswscale "FFmpeg image rescaling library" "$LIBSWSCALE_VERSION" "$LIBM" "libavutil${build_suffix} = $LIBAVUTIL_VERSION"
-pkgconfig_generate libswresample "FFmpeg audio resampling library" "$LIBSWRESAMPLE_VERSION" "$LIBM" "libavutil${build_suffix} = $LIBAVUTIL_VERSION"
-
-fix_ffmpeg_remote(){
-    git_remote_from=$1
-    git_remote_to=$2
-    fixme_remote=$(git --git-dir=$source_path/.git --work-tree=$source_path remote -v | grep $git_remote_from | cut -f 1 | sort | uniq)
-    if [ "$fixme_remote" != "" ]; then
-        echolog "
-Outdated domain in git config, the official domain for ffmpeg git is since
-November 2011, source.ffmpeg.org, both the old and the new point to the same
-repository and server. To update it enter the following commands:
-"
-        for remote in $fixme_remote; do
-            echolog "git remote set-url $remote $git_remote_to"
-        done
-    fi
-}
-
-if test -f "$source_path/.git/config"; then
-    remote_from=git.videolan.org
-    remote_to=source.ffmpeg.org
-    fix_ffmpeg_remote git@$remote_from:ffmpeg   git@$remote_to:ffmpeg
-    fix_ffmpeg_remote git://$remote_from/ffmpeg git://$remote_to/ffmpeg
-fi
